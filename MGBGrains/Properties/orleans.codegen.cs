//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace MGBGrains
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class AccountGrainFactory
    {
        

                        public static MGBGrains.IAccountGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IAccountGrain), 2034153911, primaryKey));
                        }

                        public static MGBGrains.IAccountGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IAccountGrain), 2034153911, primaryKey, grainClassNamePrefix));
                        }

                        public static MGBGrains.IAccountGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IAccountGrain), 2034153911, primaryKey));
                        }

                        public static MGBGrains.IAccountGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IAccountGrain), 2034153911, primaryKey, grainClassNamePrefix));
                        }

            public static MGBGrains.IAccountGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return AccountGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("MGBGrains.MGBGrains.IAccountGrain")]
        internal class AccountGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, MGBGrains.IAccountGrain
        {
            

            public static MGBGrains.IAccountGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (MGBGrains.IAccountGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(MGBGrains.IAccountGrain), (global::Orleans.Runtime.GrainReference gr) => { return new AccountGrainReference(gr);}, grainRef, 2034153911);
            }
            
            protected internal AccountGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal AccountGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2034153911;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "MGBGrains.MGBGrains.IAccountGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                AccountGrainReference input = ((AccountGrainReference)(original));
                return ((AccountGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                AccountGrainReference input = ((AccountGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return AccountGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return AccountGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task MGBGrains.IAccountGrain.SetUsername(string username)
            {

                return base.InvokeMethodAsync<object>(-1029844242, new object[] {username} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IAccountGrain.JoinGame(MGBGrains.IGameGrain game, MGBGrains.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(1090843970, new object[] {game is global::Orleans.Grain ? MGBGrains.GameGrainFactory.Cast(game.AsReference()) : game, player is global::Orleans.Grain ? MGBGrains.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("MGBGrains.MGBGrains.IAccountGrain", 2034153911)]
    internal class AccountGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2034153911;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2034153911:  // IAccountGrain
                        switch (methodId)
                        {
                            case -1029844242: 
                                return ((IAccountGrain)grain).SetUsername((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1090843970: 
                                return ((IAccountGrain)grain).JoinGame((IGameGrain)arguments[0], (IPlayerGrain)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2034153911:  // IAccountGrain
                    switch (methodId)
                    {
                        case -1029844242:
                            return "SetUsername";
                    case 1090843970:
                            return "JoinGame";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameGrainFactory
    {
        

                        public static MGBGrains.IGameGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameGrain), -1650090060, primaryKey));
                        }

                        public static MGBGrains.IGameGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameGrain), -1650090060, primaryKey, grainClassNamePrefix));
                        }

                        public static MGBGrains.IGameGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameGrain), -1650090060, primaryKey));
                        }

                        public static MGBGrains.IGameGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameGrain), -1650090060, primaryKey, grainClassNamePrefix));
                        }

            public static MGBGrains.IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("MGBGrains.MGBGrains.IGameGrain")]
        internal class GameGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, MGBGrains.IGameGrain
        {
            

            public static MGBGrains.IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (MGBGrains.IGameGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(MGBGrains.IGameGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameGrainReference(gr);}, grainRef, -1650090060);
            }
            
            protected internal GameGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1650090060;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "MGBGrains.MGBGrains.IGameGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                return ((GameGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> MGBGrains.IGameGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IGameGrain.Rename(string name)
            {

                return base.InvokeMethodAsync<object>(280541087, new object[] {name} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MGBGrains.IPlayerGrain>> MGBGrains.IGameGrain.Players()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<MGBGrains.IPlayerGrain>>(1078679446, new object[] {} );
            }
            
            System.Threading.Tasks.Task<MGBGrains.IPlayerGrain> MGBGrains.IGameGrain.NewPlayer(MGBGrains.IAccountGrain player, string name)
            {

                return base.InvokeMethodAsync<MGBGrains.IPlayerGrain>(2084149889, new object[] {player is global::Orleans.Grain ? MGBGrains.AccountGrainFactory.Cast(player.AsReference()) : player, name} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IGameGrain.GenerateMap(int starCount)
            {

                return base.InvokeMethodAsync<object>(-579008476, new object[] {starCount} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IGameGrain.StartGame()
            {

                return base.InvokeMethodAsync<object>(797923165, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("MGBGrains.MGBGrains.IGameGrain", -1650090060)]
    internal class GameGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1650090060;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1650090060:  // IGameGrain
                        switch (methodId)
                        {
                            case -67873697: 
                                return ((IGameGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 280541087: 
                                return ((IGameGrain)grain).Rename((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1078679446: 
                                return ((IGameGrain)grain).Players().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2084149889: 
                                return ((IGameGrain)grain).NewPlayer((IAccountGrain)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -579008476: 
                                return ((IGameGrain)grain).GenerateMap((Int32)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 797923165: 
                                return ((IGameGrain)grain).StartGame().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1650090060:  // IGameGrain
                    switch (methodId)
                    {
                        case -67873697:
                            return "Name";
                    case 280541087:
                            return "Rename";
                    case 1078679446:
                            return "Players";
                    case 2084149889:
                            return "NewPlayer";
                    case -579008476:
                            return "GenerateMap";
                    case 797923165:
                            return "StartGame";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameListGrainFactory
    {
        

                        public static MGBGrains.IGameListGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameListGrain), 1874640180, primaryKey));
                        }

                        public static MGBGrains.IGameListGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameListGrain), 1874640180, primaryKey, grainClassNamePrefix));
                        }

                        public static MGBGrains.IGameListGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameListGrain), 1874640180, primaryKey));
                        }

                        public static MGBGrains.IGameListGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IGameListGrain), 1874640180, primaryKey, grainClassNamePrefix));
                        }

            public static MGBGrains.IGameListGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameListGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("MGBGrains.MGBGrains.IGameListGrain")]
        internal class GameListGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, MGBGrains.IGameListGrain
        {
            

            public static MGBGrains.IGameListGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (MGBGrains.IGameListGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(MGBGrains.IGameListGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameListGrainReference(gr);}, grainRef, 1874640180);
            }
            
            protected internal GameListGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameListGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1874640180;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "MGBGrains.MGBGrains.IGameListGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameListGrainReference input = ((GameListGrainReference)(original));
                return ((GameListGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameListGrainReference input = ((GameListGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameListGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameListGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task MGBGrains.IGameListGrain.NewGame(MGBGrains.IGameGrain grain)
            {

                return base.InvokeMethodAsync<object>(-1522505430, new object[] {grain is global::Orleans.Grain ? MGBGrains.GameGrainFactory.Cast(grain.AsReference()) : grain} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IGameListGrain.ChangeState(MGBGrains.IGameGrain grain, MGBGrains.GameState oldState, MGBGrains.GameState newState)
            {

                return base.InvokeMethodAsync<object>(942008243, new object[] {grain is global::Orleans.Grain ? MGBGrains.GameGrainFactory.Cast(grain.AsReference()) : grain, oldState, newState} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>> MGBGrains.IGameListGrain.Unstarted()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>>(1316988399, new object[] {} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>> MGBGrains.IGameListGrain.InProgress()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>>(2011778257, new object[] {} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>> MGBGrains.IGameListGrain.Finished()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.IEnumerable<MGBGrains.IGameGrain>>(812536413, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("MGBGrains.MGBGrains.IGameListGrain", 1874640180)]
    internal class GameListGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1874640180;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1874640180:  // IGameListGrain
                        switch (methodId)
                        {
                            case -1522505430: 
                                return ((IGameListGrain)grain).NewGame((IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 942008243: 
                                return ((IGameListGrain)grain).ChangeState((IGameGrain)arguments[0], (GameState)arguments[1], (GameState)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1316988399: 
                                return ((IGameListGrain)grain).Unstarted().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2011778257: 
                                return ((IGameListGrain)grain).InProgress().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 812536413: 
                                return ((IGameListGrain)grain).Finished().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1874640180:  // IGameListGrain
                    switch (methodId)
                    {
                        case -1522505430:
                            return "NewGame";
                    case 942008243:
                            return "ChangeState";
                    case 1316988399:
                            return "Unstarted";
                    case 2011778257:
                            return "InProgress";
                    case 812536413:
                            return "Finished";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        public static MGBGrains.IPlayerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IPlayerGrain), 1850514080, primaryKey));
                        }

                        public static MGBGrains.IPlayerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IPlayerGrain), 1850514080, primaryKey, grainClassNamePrefix));
                        }

                        public static MGBGrains.IPlayerGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IPlayerGrain), 1850514080, primaryKey));
                        }

                        public static MGBGrains.IPlayerGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IPlayerGrain), 1850514080, primaryKey, grainClassNamePrefix));
                        }

            public static MGBGrains.IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("MGBGrains.MGBGrains.IPlayerGrain")]
        internal class PlayerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, MGBGrains.IPlayerGrain
        {
            

            public static MGBGrains.IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (MGBGrains.IPlayerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(MGBGrains.IPlayerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, 1850514080);
            }
            
            protected internal PlayerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1850514080;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "MGBGrains.MGBGrains.IPlayerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> MGBGrains.IPlayerGrain.Name()
            {

                return base.InvokeMethodAsync<System.String>(-67873697, new object[] {} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IPlayerGrain.Create(MGBGrains.IGameGrain game, MGBGrains.IAccountGrain account, string name)
            {

                return base.InvokeMethodAsync<object>(763531089, new object[] {game is global::Orleans.Grain ? MGBGrains.GameGrainFactory.Cast(game.AsReference()) : game, account is global::Orleans.Grain ? MGBGrains.AccountGrainFactory.Cast(account.AsReference()) : account, name} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IPlayerGrain.AcquireStar(MGBGrains.IStarGrain star)
            {

                return base.InvokeMethodAsync<object>(-490638296, new object[] {star is global::Orleans.Grain ? MGBGrains.StarGrainFactory.Cast(star.AsReference()) : star} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("MGBGrains.MGBGrains.IPlayerGrain", 1850514080)]
    internal class PlayerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1850514080;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1850514080:  // IPlayerGrain
                        switch (methodId)
                        {
                            case -67873697: 
                                return ((IPlayerGrain)grain).Name().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 763531089: 
                                return ((IPlayerGrain)grain).Create((IGameGrain)arguments[0], (IAccountGrain)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -490638296: 
                                return ((IPlayerGrain)grain).AcquireStar((IStarGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1850514080:  // IPlayerGrain
                    switch (methodId)
                    {
                        case -67873697:
                            return "Name";
                    case 763531089:
                            return "Create";
                    case -490638296:
                            return "AcquireStar";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class StarGrainFactory
    {
        

                        public static MGBGrains.IStarGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IStarGrain), 1992912436, primaryKey));
                        }

                        public static MGBGrains.IStarGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IStarGrain), 1992912436, primaryKey, grainClassNamePrefix));
                        }

                        public static MGBGrains.IStarGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IStarGrain), 1992912436, primaryKey));
                        }

                        public static MGBGrains.IStarGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(MGBGrains.IStarGrain), 1992912436, primaryKey, grainClassNamePrefix));
                        }

            public static MGBGrains.IStarGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return StarGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("MGBGrains.MGBGrains.IStarGrain")]
        internal class StarGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, MGBGrains.IStarGrain
        {
            

            public static MGBGrains.IStarGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (MGBGrains.IStarGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(MGBGrains.IStarGrain), (global::Orleans.Runtime.GrainReference gr) => { return new StarGrainReference(gr);}, grainRef, 1992912436);
            }
            
            protected internal StarGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal StarGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1992912436;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "MGBGrains.MGBGrains.IStarGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                StarGrainReference input = ((StarGrainReference)(original));
                return ((StarGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                StarGrainReference input = ((StarGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return StarGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return StarGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task MGBGrains.IStarGrain.Initialize(MGBGrains.IGameGrain game, string name)
            {

                return base.InvokeMethodAsync<object>(-1167976246, new object[] {game is global::Orleans.Grain ? MGBGrains.GameGrainFactory.Cast(game.AsReference()) : game, name} );
            }
            
            System.Threading.Tasks.Task MGBGrains.IStarGrain.ChangeOwnership(MGBGrains.IPlayerGrain player)
            {

                return base.InvokeMethodAsync<object>(1194321067, new object[] {player is global::Orleans.Grain ? MGBGrains.PlayerGrainFactory.Cast(player.AsReference()) : player} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("MGBGrains.MGBGrains.IStarGrain", 1992912436)]
    internal class StarGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1992912436;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {{                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1992912436:  // IStarGrain
                        switch (methodId)
                        {
                            case -1167976246: 
                                return ((IStarGrain)grain).Initialize((IGameGrain)arguments[0], (String)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1194321067: 
                                return ((IStarGrain)grain).ChangeOwnership((IPlayerGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }}
            catch(Exception ex)
            {{
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }}
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1992912436:  // IStarGrain
                    switch (methodId)
                    {
                        case -1167976246:
                            return "Initialize";
                    case 1194321067:
                            return "ChangeOwnership";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
